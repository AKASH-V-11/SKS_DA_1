# -*- coding: utf-8 -*-
"""SKS_DA_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kec3FTwhQgWckzyJxKkLyfFFWfQvcGGU

# 📘 **SAIKET SYSTEMS INTERNSHIP - TASK 1✅**
---
# ✅ "PROJECT-CUSTOMER CHURN ANALYSIS AND PREDICTION"
---
**1.DATA CLEANING & PREPROCESSING**
-----

~BY AKASH. V

---
# 🧹 **Task Description:**

# ->Handle missing values in the dataset
# ->Convert categorical variables into numerical representations using techniques like one-hot encoding
---

# 1️⃣ Import Required Libraries
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

"""# 2️⃣ Load Dataset"""

from google.colab import files
uploaded = files.upload()

df = pd.read_excel("Telco_Customer_Churn_Dataset.xlsx")

"""# 3️⃣ Initial Data Overview"""

print("\n🔍 Dataset Shape:", df.shape)
df.head()

"""# 4️⃣ Check for Missing Values"""

print("\n🧼 Missing Values:")
print(df.isnull().sum())

"""# 5️⃣ Visualize Missing Data"""

plt.figure(figsize=(10,6))
sns.heatmap(df.isnull(), cbar=False, cmap="YlGnBu")
plt.title("Missing Value Heatmap")
plt.show()

"""# 6️⃣ Drop Unnecessary Column"""

# 'customerID' is irrelevant for prediction
df.drop('customerID', axis=1, inplace=True)

"""# 7️⃣ Convert 'TotalCharges' to Numeric (fix object dtype)"""

df['TotalCharges'] = pd.to_numeric(df['TotalCharges'], errors='coerce')

# Impute missing TotalCharges with median
df['TotalCharges'].fillna(df['TotalCharges'].median(), inplace=True)

"""# 8️⃣ Binary Label Encoding (Yes/No → 1/0)"""

binary_cols = ['Partner', 'Dependents', 'PhoneService', 'PaperlessBilling', 'Churn']
for col in binary_cols:
    df[col] = df[col].map({'Yes': 1, 'No': 0})

"""# 9️⃣ One-Hot Encoding for Multi-Class Categorical Columns"""

multi_class_cols = ['MultipleLines', 'InternetService', 'OnlineSecurity', 'OnlineBackup',
                    'DeviceProtection', 'TechSupport', 'StreamingTV', 'StreamingMovies',
                    'Contract', 'PaymentMethod', 'gender']

# Apply One-Hot Encoding
df = pd.get_dummies(df, columns=multi_class_cols, drop_first=True)

"""# 🔟 Final Dataset Check"""

print("\n✅ Data Types After Encoding:")
print(df.dtypes)
print("\n📌 Cleaned Data Preview:")
df.head()

"""# 🔄 Save Cleaned Dataset"""

df.to_csv("cleaned_churn_data.csv", index=False)
print("\n💾 Cleaned data saved as 'cleaned_churn_data.csv'")

"""# 🔧 **Skills Gained:**
# -> Data cleaning techniques
# -> Missing data handling
# -> Encoding categorical variables

### ✅ **Conclusion – Task 1: Data Cleaning & Preprocessing**

In this task, we successfully prepared the raw telecom customer dataset for further analysis and modeling. We handled missing values, dropped irrelevant columns like `customerID`, and transformed all categorical variables using label and one-hot encoding techniques. The cleaned dataset is now entirely numerical, consistent, and ready for insights, segmentation, and machine learning applications.

This foundational step ensures accuracy and reliability in the subsequent analysis stages of the project.

**~AKASH. V - DATA ANALYSIS INTERN AT SAIKET SYSTEMS**
"""